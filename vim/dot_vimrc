set nocompatible

filetype on
syntax on

"-------------------------------------------------------------------------------
" Vim plugin manager
"-------------------------------------------------------------------------------

let s:data_dir = expand('$HOME/.vim')
let s:plugin_dir = s:data_dir . '/plugged'
let s:plug_file = s:data_dir . '/autoload/plug.vim'
let &runtimepath .= ',' . s:data_dir

if empty(glob(s:plug_file))
  silent execute '!curl -fLo ' . s:plug_file . ' --create-dirs -k ' .
    \ 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * ++once PlugInstall --sync
                 \ | call mkdir(&dir, "p")
                 \ | call mkdir(fnamemodify(&spellfile, ":h"), "p")
                 \ | source $MYVIMRC
endif

call plug#begin(s:plugin_dir)

" Vim help for plugin manager
Plug 'junegunn/vim-plug'

" Highlight tabs and trailing spaces
Plug 'jpalardy/spacehi.vim'

call plug#end()

"-------------------------------------------------------------------------------
" Text formatting
"-------------------------------------------------------------------------------

set encoding=utf-8

set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab
set shiftround

filetype indent on

set autoindent
set nosmartindent
set cindent
set cinoptions=:0,l1,g0

"-------------------------------------------------------------------------------
" UI settings
"-------------------------------------------------------------------------------

set background=dark

colorscheme default

set backspace=indent,eol,start
set nocursorline
set nofoldenable
set showmode
set ruler
set number
set numberwidth=5
set signcolumn=yes
set colorcolumn=
set showcmd
set modeline
set cmdheight=2
set showtabline=2
set laststatus=2

highlight LineNr ctermfg=darkgray
highlight SignColumn ctermbg=none
highlight ColorColumn ctermbg=darkgray

set nottyfast
set lazyredraw

"-------------------------------------------------------------------------------
" Visual cues
"-------------------------------------------------------------------------------

set hlsearch
set incsearch
set ignorecase
set smartcase

set listchars=tab:▸\ ,trail:·,precedes:←,extends:→
set nolist
set wrap
set linebreak
set showbreak=↪
set breakindent
set showmatch
set matchtime=3
set scrolloff=3
set visualbell
set t_vb=

let g:spacehi_tabcolor = "ctermfg=green ctermbg=black cterm=underline"
let g:spacehi_spacecolor = "ctermfg=green ctermbg=black cterm=standout"
let g:spacehi_nbspcolor = "ctermfg=white ctermbg=red cterm=none"

"-------------------------------------------------------------------------------
" Behavioural settings
"-------------------------------------------------------------------------------

set autoread
set hidden
set ttimeoutlen=0
set updatetime=100
set nostartofline
set completeopt=longest,menuone
set shortmess+=c
set wildignore+=*.o
set path=$PWD/**

set noundofile
set swapfile
set nobackup
set nowritebackup
set spelllang=en
set nospell

let &dir = s:data_dir . '/swap'
let &spellfile = s:data_dir . '/spell/wordlist.utf-8.add'

"-------------------------------------------------------------------------------
" Clang format
"-------------------------------------------------------------------------------

function! ClangFormatOnWrite()
  let l:formatdiff = 1
  py3file ~/clang-format.py
endfunction

"-------------------------------------------------------------------------------
" Key mappings
"-------------------------------------------------------------------------------

nnoremap <F5> :set spell!<CR>
nnoremap <F6> :set list!<CR>
nnoremap <F7> :ToggleSpaceHi<CR>
nnoremap <F8> :nohlsearch<CR>

set pastetoggle=<F9>

inoremap jk <ESC>

nnoremap j gj
nnoremap k gk

vnoremap < <gv
vnoremap > >gv

" Map Y to copy to the end of the line
map Y y$

" Remap Q to do nothing instead of entering Ex mode
nnoremap Q <nop>

nnoremap <silent> <C-h> :bprevious<CR>
nnoremap <silent> <C-l> :bnext<CR>

nnoremap <silent> <C-t> :tab split<CR>

"-------------------------------------------------------------------------------
" Auto commands
"-------------------------------------------------------------------------------

augroup vimrc_autocmd
  autocmd!

  " tpp files are actually cpp files
  au BufRead,BufNewFile *.tpp setlocal filetype=cpp

  " Highlight tabs and trailing spaces
  au syntax * SpaceHi

  " Always start editing a file in case a swap file exists
  au SwapExists * let v:swapchoice = 'e'

  " Enable spell checking for Git commit files
  au FileType gitcommit setlocal spell

  " Format cpp files on write
  au BufWritePre *.h,*.hpp,*.c,*.cc,*.cpp call ClangFormatOnWrite()

  " Return to last edit position when opening files
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
               \ |   exe "normal! g`\""
               \ | endif

  " Resize splits when the window is resized
  au VimResized * exe "normal! \<C-w>="

augroup END
